

Pointer vs Reference use cases:
------------------------------


- pass-by-value
    > when the function does not modify the actual paremeter, and
    > the parameter is small and efficient to cpy like simple types (int, char, double etc)

- pass-by-reference using Pointer
    > when a function does modify the actual parameter, and
    > the parameter is expensive to copy, and
    > it's OK for the pointer to contain a null value

- pass-by-reference using a pointer to const
    > when the function does not modify the actual parameter, and
    > the parameter is expensive to copy, and
    > it's ok for the pointer to contain a null value

- pass-by-reference using a const pointer to const
    > when the function does not modify the actual parameter, and
    > the parameter is expensive to copy, and
    > it's allowed for the pointer to contain a null value
    > you don't want to modify the pointer itself

- pass-by-reference using a reference
    > when the function does modify the actual parameter, and
    > the parameter is expensive to copy, and
    > the parameter will never be nullptr

- pass-by-reference using const reference
    > when the function does not modify the actual parameter, and
    > the parameter is expensive to copy, and
    > the parameter will never be nullptr